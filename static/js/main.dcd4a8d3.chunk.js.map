{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Text.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","React","createElement","style","height","alert","className","concat","type","role","word","lwr","toLowerCase","charAt","toUpperCase","slice","caps","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Text","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","showAlert","split","map","el","join","strArr","reverse","navigator","clipboard","writeText","filter","e","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.dcd4a8d3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const caps = (word)=>{\r\n        const lwr = word.toLowerCase();\r\n        return lwr.charAt(0).toUpperCase()+lwr.slice(1);\r\n    }\r\n\r\n  return (\r\n    <div style={{height:'4rem'}}>\r\n\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{caps(props.alert.type)}</strong> {props.alert.msg} \r\n      </div>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link \" aria-current=\"page\" href=\"\">Home</a>\r\n              </li> \r\n            </ul>\r\n        \r\n            <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?\"Enable DarkMode\":\"Enable LightMode\"}</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\n","import React, {useState} from 'react';\r\n\r\nexport default function Text(props) {\r\n    const [text, setText] = useState('Enter text');\r\n    \r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase(text);\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UPPERCASE\",\"success\");\r\n    }\r\n    const handleLwrClick = () =>{\r\n        let newText = text.toLowerCase(text);\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\",\"success\")\r\n    }\r\n\r\n    const handleClrText = () =>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\",\"success\")\r\n    }\r\n\r\n    const handleCopyText = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard\",\"success\")\r\n    }\r\n\r\n    const handleRevText = (event) => {\r\n        let strArr = text.split(\"\");\r\n        strArr = strArr.reverse();\r\n        let newText = strArr.join(\"\");\r\n        setText(newText);\r\n        props.showAlert(\"Text reversed\",\"success\")\r\n    };\r\n\r\n    const handleCapText = () => {\r\n        let newText = text.split(\" \").map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Text Capitalized\",\"success\")\r\n    }\r\n\r\n    const handleExSpc= ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space removed\",\"success\")\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode===`light`?'black':'white'}}>\r\n            <h1>  {props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value ={ text} onChange ={handleOnChange} style={{backgroundColor:props.mode===`light`?'white':'#212529', color:props.mode===`light`?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleUpClick}>UPPER CASE</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleLwrClick}>lower case</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleCapText}>Capitalize Word</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleRevText}>Reverse</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleExSpc}>Remove extra space</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleCopyText}>Copy to Clipboard</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick = {handleClrText}>Clear</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color:props.mode===`light`?'black':'white'}}>\r\n            <h2>Summary</h2>\r\n            <p>{text.split(/\\s+/).filter((e)=>{return e.length!==0}).length} words and {text.length} characters</p>\r\n            <p> {0.008 * text.split(\" \").filter((e)=>{return e.length!==0}).length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter text above to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\n\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');// whether dark mode is enable or not\n  \n  const [alert, setAlert] = useState(null);// whether dark mode is enable or not\n\n  const toggleMode = ()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = 'rgb(1 38 45 / 97%)';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = '#dbf4f8';\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  }\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextPerfecta\" mode={mode} toggleMode={toggleMode}/>\n     \n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\" >\n        <Text showAlert={showAlert} heading =\"Enter your Text here\" mode={mode}/>\n      </div>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}